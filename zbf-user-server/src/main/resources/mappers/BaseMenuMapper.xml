<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zbf.user.mapper.BaseMenuMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.zbf.common.entity.my.BaseMenu">
        <id column="id" property="id" />
        <result column="version" property="version" />
        <result column="code" property="code" />
        <result column="menuName" property="menuName" />
        <result column="imagePath" property="imagePath" />
        <result column="url" property="url" />
        <result column="parentCode" property="parentCode" />
        <result column="leval" property="leval" />
        <result column="createTime" property="createTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, version, code, menuName, imagePath, url, parentCode, leval, createTime
    </sql>

    <resultMap id="mapVo" type="com.zbf.common.entity.my.BaseMenu">
        <id column="id" property="id" />
        <result column="version" property="version" />
        <result column="code" property="code" />
        <result column="menuName" property="menuName" />
        <result column="imagePath" property="imagePath" />
        <result column="url" property="url" />
        <result column="parentCode" property="parentCode" />
        <result column="leval" property="leval" />
        <result column="createTime" property="createTime" />
        <collection property="list" ofType="com.zbf.common.entity.my.BaseMenu" select="findByPid" column="id">
        </collection>
    </resultMap>

    <select id="findByPid" resultMap="mapVo">
        select * from base_menu where leval=#{pid};
    </select>

    <resultMap id="mapVos" type="com.zbf.common.entity.my.BaseMenu">
        <id column="id" property="id" />
        <result column="version" property="version" />
        <result column="code" property="code" />
        <result column="menuName" property="menuName" />
        <result column="imagePath" property="imagePath" />
        <result column="url" property="url" />
        <result column="parentCode" property="parentCode" />
        <result column="leval" property="leval" />
        <result column="createTime" property="createTime" />
        <collection property="list" ofType="com.zbf.common.entity.my.BaseMenu">
            <id column="id2" property="id" />
            <result column="version2" property="version" />
            <result column="code2" property="code" />
            <result column="menuName2" property="menuName" />
            <result column="imagePath2" property="imagePath" />
            <result column="url2" property="url" />
            <result column="parentCode2" property="parentCode" />
            <result column="leval2" property="leval" />
            <result column="createTime2" property="createTime" />
            <collection property="list" ofType="com.zbf.common.entity.my.BaseMenu">
                <id column="id3" property="id" />
                <result column="version3" property="version" />
                <result column="code3" property="code" />
                <result column="menuName3" property="menuName" />
                <result column="imagePath3" property="imagePath" />
                <result column="url3" property="url" />
                <result column="parentCode3" property="parentCode" />
                <result column="leval3" property="leval" />
                <result column="createTime3" property="createTime" />
            </collection>
        </collection>
    </resultMap>


    <select id="listadmin" resultMap="mapVos">
SELECT DISTINCT a.id,
    a.code,
	a.imagePath,
	a.menuName,
    a.parentCode,
    a.leval,
	a.url,
    b.code code2,
	b.id id2,
b.imagePath imagePath2,
	b.menuName menuName2,
	b.parentCode parentCode2,
	b.url url2,
	b.leval leval2,
	c.leval leval3,
	c.code code3,
	c.id id3,
	c.imagePath imagePath3,
	c.menuName menuName3,
    c.parentCode parentCode3,
	c.url url3
FROM
	base_menu a
	LEFT JOIN base_menu b ON  b.parentCode = a.`code`
	LEFT JOIN base_menu c ON c.parentCode = b.`code`
	WHERE a.leval = 1

    </select>


    <select id="listByName" resultMap="mapVos">
SELECT DISTINCT e.id,
    e.code,
	e.imagePath,
	e.menuName,
    e.parentCode,
    e.leval,
	e.url,
    e2.code code2,
    e2.parentCode parentCode2,
    e2.leval level2,
    e2.id id2,
	e2.imagePath imagePath2,
	e2.menuName menuName2,

	e2.url url2,
	 e3.code code3,
    e3.parentCode parentCode3,
    e3.leval level3,
	e3.id id3,
	e3.imagePath imagePath3,
	e3.menuName menuName3,

	e3.url url3
FROM
	base_user a
	inner JOIN base_user_role b ON a.id = b.userId
	inner JOIN base_role c ON b.roleId = c.id
	inner JOIN base_role_menu d ON c.id = d.role_id
	inner JOIN base_menu e ON d.menu_id = e.id
	inner JOIN base_menu e2 ON e2.parentCode = e.`code`
	inner JOIN base_menu e3 ON e3.parentCode = e2.`code`
WHERE
	a.loginName = #{loginName}
	AND e.parentCode = 0
	AND e.leval = 1
	AND e2.leval = 2
	AND e3.leval = 3

    </select>

</mapper>
